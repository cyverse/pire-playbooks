---
- name: Install and configure apache
  hosts: webdav
  become: true
  collections:
    - community.general
  vars:
    projects_redirected_htpasswd: |
      iychoi:$apr1$EP4KsytS$eOGc7ZAZujFM0uyy6viV51

    projects_redirected_htaccess: |
      AuthName {{ _webdav_auth_name }}
      AuthType Basic
      AuthUserFile {{ _webdav_local_irods_vault_project_path }}/.htpasswd
      Require valid-user

  roles:
    - role: geerlingguy.apache
      vars:
        apache_ssl_cipher_suite: "HIGH:3DES:!aNULL:!MD5:!SEED:!IDEA"
        apache_global_vhost_settings: |
          <IfModule !log_forensic_module>
            LoadModule log_forensic_module modules/mod_log_forensic.so
          </IfModule>

          <IfModule !proxy_html_module>
            LoadModule proxy_html_module modules/mod_proxy_html.so
          </IfModule>

          <IfModule !sed_module>
            LoadModule sed_module modules/mod_sed.so
          </IfModule>

          <IfModule !unique_id_module>
            LoadModule unique_id_module modules/mod_unique_id.so
          </IfModule>

          <IfModule mpm_worker_module>
            ServerLimit             {{ _webdav_server_limit }}
            ThreadsPerChild         {{ _webdav_threads_per_child }}
            MaxRequestWorkers       {{ _webdav_max_request_workers }}
          </IfModule>

          ForensicLog logs/forensic_log
          ErrorLogFormat "%{cu}t %-L [pid %P] [%-m:%l] %-a %E: %M"

          Listen 443 https
          Listen 8047

          SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog
          SSLRandomSeed connect builtin
          SSLRandomSeed startup file:/dev/urandom 256
          SSLSessionCache shmcb:/run/httpd/sslcache(512000)

          ProxyErrorOverride On
          ProxyHTMLEnable On
          ProxyHTMLLinks a href
          ProxyHTMLLinks base href

        apache_vhosts:
          - servername: "{{ _canonical_hostname }}"
            listen_ip: 127.0.0.1
            listen_port: 8047
            extra_parameters: |
              DocumentRoot {{ _webdav_local_irods_vault_project_path }}

              <Directory {{ _webdav_local_irods_vault_project_path }}>
                Require all granted
                AllowOverride All
                Options +Indexes
              </Directory>

              ErrorLog logs/error_log
              CustomLog logs/access_log {{ '"%{%Y-%m-%d %T}t.%{usec_frac}t %{X-Forwarded-For}i \"%r\" %>s %L %{forensic-id}n"' }}
              LogLevel warn

              Header set Access-Control-Allow-Headers "Range"
              Header set Access-Control-Allow-Methods "GET, HEAD, OPTIONS"
              Header set Access-Control-Allow-Origin "*"

              UseCanonicalName On

              RewriteEngine On
              RewriteCond %{REQUEST_METHOD} ^(PUT|POST|DELETE)
              RewriteRule .* - [F]
            comment: Vhost for accessing Local iRODS Resource Server's content
            locations:
              - path: /
                comment: Read access to some project folders stored in local file system

          - servername: "{{ _canonical_hostname }}"
            listen_ip: 127.0.0.1
            extra_parameters: |
              ErrorLog logs/error_log
              CustomLog logs/access_log {{ '"%{%Y-%m-%d %T}t.%{usec_frac}t %{X-Forwarded-For}i \"%r\" %>s %L %{forensic-id}n"' }}
              LogLevel warn

              Header set Access-Control-Allow-Headers "Range"
              Header set Access-Control-Allow-Methods "GET, HEAD, OPTIONS"
              Header set Access-Control-Allow-Origin "*"

              UseCanonicalName On

              # Redirect read (GET and HEAD) access to local iRODS resource server's data 
              RewriteEngine On
              RewriteCond %{REQUEST_METHOD} ^(GET|HEAD)
              RewriteRule ^/dav/{{ _irods_zone_name }}/projects/eht/(.*)$ http://127.0.0.1:8047/eht/$1 [P,L]
              RewriteCond %{REQUEST_METHOD} ^(GET|HEAD)
              RewriteRule ^/dav/{{ _irods_zone_name }}/projects/bhpire/(.*)$ http://127.0.0.1:8047/bhpire/$1 [P,L]
              
              # Redirect to data.cyverse.org
              SSLProxyEngine on
              RewriteRule ^/(.*)$ https://data.cyverse.org/$1 [P,L]
            comment: The WebDAV host

        apache_vhosts_ssl:
          - servername: "{{ _canonical_hostname }}"
            certificate_file: "{{ _webdav_tls_cert_file }}"
            certificate_key_file: "{{ _webdav_tls_key_file }}"
            certificate_chain_file: "{{ _webdav_tls_chain_file }}"
            extra_parameters: |
              #ServerAlias {{ inventory_hostname }}

              ErrorLog logs/https_error_log
              CustomLog logs/https_request_log {{ '"%{%Y-%m-%d %T}t.%{usec_frac}t %{SSL_PROTOCOL}x %{SSL_CIPHER}x %a \"%r\" %>s %L %{forensic-id}n"' }}
              LogLevel warn

              BrowserMatch "MSIE [2-5]" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0

              <If "%{HTTP:Range} == 'bytes=0-'">
                # Remove the range header if requesting the whole file so that the response will
                # still be cached.
                RequestHeader unset Range
              </If>
              <Elseif "-n %{HTTP:Range}">
                # To prevent davrods from crashing, tell it not to cache partial responses
                # When varnish-cache is configured, this should be commented out for caching
                # RequestHeader merge Cache-Control no-store
              </Elseif>

              ProxyPass / http://127.0.0.1/ retry=0 timeout=300
              ProxyHTMLURLMap ^http: https: [R]

              Header edit Location ^http: https:
              Header merge Cache-Control public

              # Disable cache when varnish-cache is configured
              CacheDisable /

              ExpiresActive On

              <Files ~ "\.(cgi|shtml|phtml|php3?)$">
                SSLOptions +StdEnvVars
              </Files>

              <Directory "/var/www/cgi-bin">
                SSLOptions +StdEnvVars
              </Directory>
            comment: >-
              This proxy handles TLS, corrects requests, enables caching, and anonymous access for 
              XMLHttpRequests
        apache_vhosts_template: ../../templates/webdav/etc/httpd/conf.d/vhosts.conf.j2

  pre_tasks:
    - name: enable notifcations
      set_fact:
        notifications_enabled: true

    - name: package_facts uses auto, setup for next task
      package_facts:

    - name: build & install mod_ssl-rm_ssl_conf RPM package to remove ssl.conf
      include_tasks: tasks/install_rm_sslconf_rpm.yml
      when: "'mod_ssl-rm_ssl_conf' not in ansible_facts.packages"
      
    - name: install apache modules
      package:
        name: 
          - mod_proxy_html
          - mod_ssl

    - name: update apache modules
      copy:
        src: "{{ item }}"
        dest: /etc/httpd/conf.modules.d
      with_fileglob:
        - 'files/webdav/etc/httpd/conf.modules.d/*'
      notify:
        - restart httpd

    - include_tasks: tasks/mk_webdav_dir_head.yml
      vars:
        head_dav_base: "{{ _irods_zone_name }}/{{ item.base }}"
        head_file: "{{ item.file }}"
      with_items:
        - file: home-head.html
          base: home
        - file: projects-head.html
          base: projects

    - include_tasks: tasks/install_webdav_html.yml
      vars:
        svc: dav

    - name: add .htpasswd for read access to local iRODS Vault
      copy:
        content: "{{ projects_redirected_htpasswd }}"
        dest: "{{ _webdav_local_irods_vault_project_path }}/.htpasswd"
        owner: irods
        group: irods
        mode: "0644"
        force: no
      
    - name: add .htaccess for read access to local iRODS Vault
      copy:
        content: "{{ projects_redirected_htaccess }}"
        dest: "{{ _webdav_local_irods_vault_project_path }}/.htaccess"
        owner: irods
        group: irods
        mode: "0644"

    - name: add root web page
      copy:
        src: files/webdav/var/www/html/index.html
        dest: /var/www/html/index.html

    - name: add robots.txt
      copy:
        src: files/webdav/var/www/html/robots.txt
        dest: /var/www/html/robots.txt

  post_tasks:
    - name: create apache systemd service dependencies directory
      file:
        path: /etc/systemd/system/httpd.service.requires
        state: directory

    - name: open HTTP connection in firewall
      blockinfile:
        path: /etc/sysconfig/iptables
        insertbefore: -A INPUT -j REJECT
        marker: "# {mark} DS MANAGED BLOCK (webdav)"
        content: |
          {% for i in _webdav_allowed_src %}
          -A INPUT -m state --state NEW -p tcp -s {{ i }} --dport 80 -j ACCEPT
          -A INPUT -m state --state NEW -p tcp -s {{ i }} --dport 8047 -j ACCEPT
          -A INPUT -m state --state NEW -p tcp -s {{ i }} --dport 443 -j ACCEPT
          {% endfor %}
      notify: restart firewall

  handlers:
    - name: restart firewall
      when: notifications_enabled | default(false)
      service:
        name: iptables
        state: restarted

    - name: reload systemd
      when: notifications_enabled | default(false)
      systemd:
        daemon_reload: true

    - name: restart httpd
      when: notifications_enabled | default(false)
      service:
        name: httpd
        state: restarted
